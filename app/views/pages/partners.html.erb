  <script>

  function rand(x) {
    return Math.floor(Math.random() * x);
  }

  var PartnerGrid = {
    // configure here
    slideDelay    : 5000,
    slideDuration : 1250,

    width   : 8,
    height  : 5,

    x_overflow : 3,
    y_overflow : 3,

    // don't touch stuff below here
    offset  : { x : 0, y : 0 },

    current : null,
    tiles   : null,

    overflow_width  : 0,
    overflow_height : 0,

    tile_height : 0,
    tile_width  : 0,

    sliding  : false,
    hovering : false,

    setup : function() {
      PartnerGrid.tiles = $('#partner_grid_slider .partner_detail_holder');

      var tile    = $(PartnerGrid.tiles[0]);
      var padding = parseInt(tile.css('margin-left'));

      PartnerGrid.tile_width =  parseInt(tile.css('width')) + padding * 2;
      PartnerGrid.tile_height = parseInt(tile.css('height')) + padding * 2;

      $.each(PartnerGrid.tiles, function(i, e){
        // $(e).css('padding', padding + 'px');
        // $(e).css('margin', '0');
//        var details = $(e).find('.partner_details')

      });

      PartnerGrid.extendGrid();
      PartnerGrid.addHoverHandlers();
      PartnerGrid.slide();
    },

    completeSlide : function() {
      var tile_index = PartnerGrid.offset.x + rand(PartnerGrid.width) +
                       (PartnerGrid.offset.y + rand(PartnerGrid.height)) * PartnerGrid.overflow_width;

      PartnerGrid.current = $(PartnerGrid.tiles[tile_index]);
      PartnerGrid.showDetails();

      PartnerGrid.sliding = false;

      setTimeout('PartnerGrid.slide()', PartnerGrid.slideDelay);
    },

    slide : function() {
      if (PartnerGrid.hovering) {
        setTimeout('PartnerGrid.slide()', PartnerGrid.slideDelay);
        return;
      }

      PartnerGrid.sliding = true;
      PartnerGrid.hideDetails();

      var new_offset = { x : PartnerGrid.offset.x, y : PartnerGrid.offset.y };
      while (new_offset.x == PartnerGrid.offset.x && new_offset.y == PartnerGrid.offset.y) {
        new_offset.x = rand(PartnerGrid.x_overflow * 2);
        new_offset.y = rand(PartnerGrid.y_overflow * 2);
      }
      PartnerGrid.offset = new_offset;

      $('#partner_grid_slider').animate( { left : -1 * PartnerGrid.offset.x * PartnerGrid.tile_width  + 'px',
                                           top  : -1 * PartnerGrid.offset.y * PartnerGrid.tile_height + 'px' },
                                         { duration : PartnerGrid.slideDuration,
                                           complete : PartnerGrid.completeSlide } );
    },

    showDetails : function() {
      var tile = PartnerGrid.current;
      var partner_details = tile.find('.partner_details');
      var slider = $('#partner_grid_slider');
      var grid = $('#partner_grid');

      var slider_left = parseInt(slider.css('left'));
      var slider_top = parseInt(slider.css('top'));

      tile.find('a').css('background-position', '0px -120px');

      if(tile.position().left + partner_details.width() + slider_left > grid.width()) {
        var right_offset = slider.width() + slider_left - grid.width() + 4;
        partner_details.css('right', right_offset + 'px');
      } else {
        partner_details.css('right', '');
      }

      if(tile.position().top + tile.height() + partner_details.height() + slider_top > grid.height()) {
        var top_offset = tile.position().top - partner_details.height() - 34;
        partner_details.css('top', top_offset + 'px');
      } else {
        partner_details.css('top', '');
      }

      partner_details.show();
    },

    hideDetails : function() {
      if (PartnerGrid.current) {
        var tile = PartnerGrid.current;
        PartnerGrid.current = null;
        tile.find('a').css('background-position', '');
        tile.find('.partner_details').hide();
      }
    },

    extendGrid : function() {
      var container = $('#partner_grid');
      var grid      = $('#partner_grid_slider');

      PartnerGrid.overflow_width  = PartnerGrid.width  + 2 * PartnerGrid.x_overflow;
      PartnerGrid.overflow_height = PartnerGrid.height + 2 * PartnerGrid.y_overflow;

      container.css('width',  PartnerGrid.tile_width  * PartnerGrid.width  + 'px');
      container.css('height', PartnerGrid.tile_height * PartnerGrid.height + 'px');
      container.css('overflow', 'hidden');

      grid.css('width',  PartnerGrid.tile_width  * PartnerGrid.overflow_width  + 'px');
      grid.css('height', PartnerGrid.tile_height * PartnerGrid.overflow_height + 'px');

      var count  = PartnerGrid.tiles.length;
      var extras = PartnerGrid.overflow_width * PartnerGrid.overflow_height - count;

      var i = 0;
      while (i < extras) {
        grid.append($(PartnerGrid.tiles[i++ % count]).clone(true));
      }

      // update the grid so we can automatically highlight a random one in the view scope
      PartnerGrid.tiles = $('#partner_grid_slider .partner_detail_holder');
    },

    addHoverHandlers : function () {
      $.each(PartnerGrid.tiles, function(i, e) {
        $(e).mouseover(function(){
          if (!PartnerGrid.sliding) {
            PartnerGrid.hideDetails();
            PartnerGrid.hovering = true;
            PartnerGrid.current = $(this);
            PartnerGrid.showDetails();
          }
        });
      });

      $('#partner_grid_slider').mouseout(function(e) {
        if (PartnerGrid.hovering) {
          if (!e) var e = window.event;
          var tg = (window.event) ? e.srcElement : e.target;
          if ($(tg).attr('id') != 'partner_grid_slider') return;
          var reltg = (e.relatedTarget) ? e.relatedTarget : e.toElement;
          while (reltg != tg && reltg.nodeName != 'BODY') reltg = reltg.parentNode;
          if (reltg == tg) return;

          PartnerGrid.hideDetails();
          PartnerGrid.hovering = false;
        }
      });
    }
  }

  $(function(){
    $.easing.def = 'easeInOutSine';
    setTimeout("PartnerGrid.setup();",4000);
  });

</script>



<div id="partnerheader">
<h1><%= Content.insert('page_current_partners') %></h1>
</div>

<div id="partner_grid">
  <div id="partner_grid_slider">
  <% Organization.all_partners.each do |organization| %>

    <div class="partner_detail_holder">
     <a style="background-image: url(<%= organization.avatar.grey_rollover_sprite.url %>);">
      <%= organization.name %>
     </a>
     <div class="partner_details">
       <div class="partner_logo">
         <%= image_tag organization.avatar.regular.url %>
       </div>
       <div class="inner_details">
         <h1><%=h truncate organization.name, :length=>90 %></h1>
         <h3>CORE COMMITMENT: <%= organization.commitment_category.humanize %> //</h3>
         <%= h truncate strip_tags(Hpricot.uxs organization.commitment.gsub(/[[:cntrl:]]/, '')),
            :length=>250, :separator => ' ' %>
         <a href="/page/commitments?commitment=<%= organization.commitment_category %>#organization_<%= organization.id %>">Learn More Â»</a>
       </div>
     </div>
    </div>

  <% end %>
 </div>
 <div style="clear:both;"></div>
</div>
